{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ochea\\\\Documents\\\\LAW\\\\nome\\\\src\\\\pages\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Header, Loading } from \"../componets\";\nexport default function Home() {\n  _s();\n\n  var _useState = useState(true),\n      IsLoading = _useState[0],\n      stIsLoading = _useState[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setIsLoading(flase);\n    }, 4000);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: IsLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 42\n    }, this)\n  }, void 0, false);\n}\n\n_s(Home, \"SDsSPynW/DgSp7g9XnBa0RCCEpA=\");\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/ochea/Documents/LAW/nome/src/pages/index.tsx"],"names":["useEffect","useState","Header","Loading","Home","IsLoading","stIsLoading","setTimeout","setIsLoading","flase"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAAQC,MAAR,EAAgBC,OAAhB,QAA8B,cAA9B;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAAA,kBACMH,QAAQ,CAAC,IAAD,CADd;AAAA,MACpBI,SADoB;AAAA,MACTC,WADS;;AAE3BN,EAAAA,SAAS,CAAC,YAAI;AACVO,IAAAA,UAAU,CAAC,YAAI;AACXC,MAAAA,YAAY,CAACC,KAAD,CAAZ;AACH,KAFS,EAER,IAFQ,CAAV;AAGH,GAJQ,CAAT;AAKA,sBACI;AAAA,cACKJ,SAAS,gBAAI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAJ,gBAAmB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADjC,mBADJ;AAKH;;GAZuBD,I;;KAAAA,I","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useTheme } from \"styled-components\";\r\nimport {Header, Loading} from \"../componets\"\r\n\r\nexport default function Home() {\r\n    const [IsLoading, stIsLoading] = useState(true);\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            setIsLoading(flase);\r\n        },4000);\r\n    })\r\n    return (\r\n        <>\r\n            {IsLoading ? (<Loading />): (<Header />)}\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}